<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL练习</title>
      <link href="/09/01/2022/MySQL%E5%AD%A6%E4%B9%A0/MySQL%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
      <url>/09/01/2022/MySQL%E5%AD%A6%E4%B9%A0/MySQL%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL基础练习"><a href="#MySQL基础练习" class="headerlink" title="MySQL基础练习"></a>MySQL基础练习</h2><p>本文章主要记录学习SQL的基础练习</p><p>附上学习网站：<a href="http://xuesql.cn/">自学SQL</a></p><ul><li>DISTINCT</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">选取出唯一的结果的语法</span><br><span class="line">SELECT DISTINCT column, another_column, …</span><br><span class="line">FROM mytable</span><br><span class="line">WHERE condition(s);</span><br></pre></td></tr></table></figure><p><a href="https://so.csdn.net/so/search?q=DISTINCT&spm=1001.2101.3001.7020">DISTINCT</a> 语法会直接删除重复的行，即排重。</p><ul><li>GROUP BY</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">结果排序（ordered results）</span><br><span class="line">SELECT column, another_column, …</span><br><span class="line">FROM mytable</span><br><span class="line">WHERE condition(s)</span><br><span class="line">ORDER BY column ASC/DESC;</span><br></pre></td></tr></table></figure><p>ASC表示升序排列 A-Z<br>DESC表示降序排列 Z-A</p><ul><li>LIMIT 和 OFFSET</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">limited查询</span><br><span class="line">SELECT column, another_column, …</span><br><span class="line">FROM mytable</span><br><span class="line">WHERE condition(s)</span><br><span class="line">ORDER BY column ASC/DESC</span><br><span class="line">LIMIT num_limit OFFSET num_offset;</span><br></pre></td></tr></table></figure><p>对整个结果集排序之后，我们可以 LIMIT来指定只返回多少行结果 ,用 OFFSET来指定从哪一行开始返回。</p><ol><li>按导演名排重列出所有电影，并按导演名正序排列</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 按照导演名 排重 列出所有电影</span><br><span class="line">SELECT DISTINCT director FROM movies</span><br><span class="line"># 按照导演名正序排列</span><br><span class="line">ORDER BY director ASC</span><br></pre></td></tr></table></figure><p>注意 DISTINCT 排重，只取director属性。</p><ol><li>列出按上映年份最新上线的4部电影</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM movies</span><br><span class="line"># 按照年份降序排列</span><br><span class="line">ORDER BY year DESC </span><br><span class="line"># 取出其中前4条数据</span><br><span class="line">LIMIT 4</span><br></pre></td></tr></table></figure><ol><li>按电影名字母升序排列，列出前5部电影</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM movies</span><br><span class="line"># 按照电影名字升序排列</span><br><span class="line">ORDER BY title ASC </span><br><span class="line"># 取前5部电影</span><br><span class="line">LIMIT 5</span><br></pre></td></tr></table></figure><ol><li>按电影名字母序升序排列，列出上一题之后的5部电影</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM movies</span><br><span class="line"># 按照名称升序排列</span><br><span class="line">ORDER BY title ASC </span><br><span class="line"># 从第五条数据开始取出5条后面的数据</span><br><span class="line">LIMIT 5 OFFSET 5</span><br></pre></td></tr></table></figure><p>LIMIT num0 OFFET num1，LIMIT指示选取长度，OFFET指示从哪里开始选取。</p><ol><li>如果按片长排列，John Lasseter导演导过片长第3长的电影是哪部，列出名字即可</li></ol><p>先取出整行数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM movies</span><br><span class="line"># 取出John Lasseter导演的所有电影</span><br><span class="line">WHERE director LIKE &quot;John Lasseter&quot;</span><br><span class="line"># 按照片场升序排列</span><br><span class="line">ORDER BY length_minutes ASC</span><br><span class="line"># 取出第三长的数据</span><br><span class="line">LIMIT 1 OFFSET 2;</span><br></pre></td></tr></table></figure><p>再用title筛选，取出名字即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT title FROM movies</span><br><span class="line"></span><br><span class="line">WHERE director LIKE &quot;John Lasseter&quot;</span><br><span class="line"></span><br><span class="line">ORDER BY length_minutes ASC</span><br><span class="line"></span><br><span class="line">LIMIT 1 OFFSET 2;</span><br></pre></td></tr></table></figure><p>这里可以考虑一下执行效率的问题</p><ol><li>按导演名字母升序,如果导演名相同按年份降序,取前10部电影给我</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM movies</span><br><span class="line"># 导演名升序，年份降序</span><br><span class="line">ORDER BY director ASC, year DESC</span><br><span class="line"># 取出前10个数据</span><br><span class="line">LIMIT 10;</span><br></pre></td></tr></table></figure><ul><li><h4 id="SQL-Lesson-4-查询结果Filtering过滤-和-sorting排序"><a href="#SQL-Lesson-4-查询结果Filtering过滤-和-sorting排序" class="headerlink" title="SQL Lesson 4: 查询结果Filtering过滤 和 sorting排序"></a>SQL Lesson 4: 查询结果Filtering过滤 和 sorting排序</h4></li></ul><p>1.【结果排序】按导演名排重列出所有电影(只显示导演)，并按导演名正序排列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT Director</span><br><span class="line">FROM movies</span><br><span class="line">ORDER BY Director ASC</span><br></pre></td></tr></table></figure><p>2.【结果排序】列出按上映年份最新上线的4部电影</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT *</span><br><span class="line">FROM movies</span><br><span class="line">ORDER BY Year DESC</span><br><span class="line">LIMIT 4</span><br></pre></td></tr></table></figure><p>3.【结果排序】按电影名字母序升序排列，列出前5部电影</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT * FROM movies</span><br><span class="line">ORDER BY Title ASC </span><br><span class="line">LIMIT 5</span><br></pre></td></tr></table></figure><p>4.【结果排序】按电影名字母序升序排列，列出上一题之后的5部电影</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT *FROM movies</span><br><span class="line">ORDER BY Title ASC </span><br><span class="line">LIMIT 5 OFFSET 5;</span><br></pre></td></tr></table></figure><p>5.【结果排序】如果按片长排列，John Lasseter导演导过片长第3长的电影是哪部，列出名字即可&#x3D;&#x3D;AVG()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT Title FROM movies</span><br><span class="line">WHERE Director=&#x27;John Lasseter&#x27;</span><br><span class="line">ORDER BY Length_minutes ASC </span><br><span class="line">limit 1 offset 2;</span><br></pre></td></tr></table></figure><ul><li><h4 id="SQL-Review-复习-SELECT-查询"><a href="#SQL-Review-复习-SELECT-查询" class="headerlink" title="SQL Review: 复习 SELECT 查询"></a>SQL Review: 复习 SELECT 查询</h4></li></ul><p>1.【复习】列出所有加拿大人的Canadian信息(包括所有字段)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM north_american_cities</span><br><span class="line">WHERE Country=&#x27;Canada&#x27;</span><br></pre></td></tr></table></figure><p>2.【复习】列出所有在Chicago西部的城市，从西到东排序(包括所有字段)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM north_american_cities</span><br><span class="line">WHERE Longitude&lt;87.629798</span><br><span class="line">ORDER BY Longitude DESC</span><br></pre></td></tr></table></figure><p>3.【复习】用人口数population排序,列出墨西哥Mexico最大的2个城市(包括所有字段)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM north_american_cities</span><br><span class="line">WHERE Country=&#x27;Mexico&#x27;</span><br><span class="line">ORDER BY Population DESC</span><br><span class="line">LIMIT 2</span><br></pre></td></tr></table></figure><p>4.【复习】列出美国United States人口3、4位的两个城市和他们的人口(包括所有字段)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM north_american_cities</span><br><span class="line">WHERE Country=&#x27;United States&#x27; </span><br><span class="line">ORDER BY  Population </span><br><span class="line">LIMIT 2 OFFSET 2</span><br></pre></td></tr></table></figure><ul><li><h4 id="SQL-Lesson-6-用JOINs进行多表联合查询"><a href="#SQL-Lesson-6-用JOINs进行多表联合查询" class="headerlink" title="SQL Lesson 6: 用JOINs进行多表联合查询"></a>SQL Lesson 6: 用JOINs进行多表联合查询</h4></li></ul><p>1.【联表】找到所有电影的国内Domestic_sales和国际销售额</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM movies inner join boxoffice </span><br><span class="line">on movies.id = boxoffice.movie_id</span><br></pre></td></tr></table></figure><p>2.【联表】找到所有国际销售额比国内销售大的电影</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM movies </span><br><span class="line">inner join boxoffice </span><br><span class="line">on movies.id = boxoffice.movie_id </span><br><span class="line">WHERE Boxoffice.Domestic_sales&lt;Boxoffice.International_sales</span><br></pre></td></tr></table></figure><p>3.【联表】找出所有电影按市场占有率rating倒序排列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM movies </span><br><span class="line">inner join Boxoffice </span><br><span class="line">on Movies.Id = Boxoffice.Movie_id </span><br><span class="line">ORDER BY rating DESC</span><br></pre></td></tr></table></figure><p>4.【联表】每部电影按国际销售额比较,排名最靠前的导演是谁,国际销量多少</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT Director,International_sales FROM movies </span><br><span class="line">inner join Boxoffice </span><br><span class="line">on Movies.Id=Boxoffice.Movie_id </span><br><span class="line">ORDER BY International_sales DESC LIMIT 1</span><br></pre></td></tr></table></figure><ul><li><h4 id="SQL-Lesson-7-外连接（OUTER-JOINs）"><a href="#SQL-Lesson-7-外连接（OUTER-JOINs）" class="headerlink" title="SQL Lesson 7: 外连接（OUTER JOINs）"></a>SQL Lesson 7: 外连接（OUTER JOINs）</h4></li></ul><p>1.【复习】找到所有有雇员的办公室(buildings)名字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT building FROM employees </span><br><span class="line">where building is not null</span><br></pre></td></tr></table></figure><p>2.【复习】找到所有办公室里的所有角色（包含没有雇员的）,并做唯一输出(DISTINCT)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT buildings.building_name,employees.Role FROM buildings </span><br><span class="line">left join employees </span><br><span class="line">on buildings.building_name = employees.building</span><br></pre></td></tr></table></figure><p>3.【难题】找到所有有雇员的办公室(buildings)和对应的容量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT Buildings.Building_name,Buildings.Capacity FROM Employees </span><br><span class="line">inner JOIN Buildings ON Employees.Building=Buildings.Building_name </span><br><span class="line">WHERE Building is not null</span><br></pre></td></tr></table></figure><ul><li><h4 id="SQL-Lesson-8-关于特殊关键字-NULLs"><a href="#SQL-Lesson-8-关于特殊关键字-NULLs" class="headerlink" title="SQL Lesson 8: 关于特殊关键字 NULLs"></a>SQL Lesson 8: 关于特殊关键字 NULLs</h4></li></ul><p>1.【复习】找到雇员里还没有分配办公室的(列出名字和角色就可以)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT Employees.Role,Employees.Name FROM employees WHERE Building is NULL</span><br></pre></td></tr></table></figure><p>2.【难题】找到还没有雇员的办公室</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT Building_name FROM buildings </span><br><span class="line">left join employees on buildings.building_name = employees.building </span><br><span class="line">WHERE Role IS NULL</span><br></pre></td></tr></table></figure><ul><li><h4 id="SQL-Lesson-9-在查询中使用表达式"><a href="#SQL-Lesson-9-在查询中使用表达式" class="headerlink" title="SQL Lesson 9: 在查询中使用表达式"></a>SQL Lesson 9: 在查询中使用表达式</h4></li></ul><p>1.【计算】列出所有的电影ID,名字和销售总额(以百万美元为单位计算)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT Id,Title,(Domestic_sales+International_sales)/1000000 as 销售总额 FROM movies </span><br><span class="line">inner join Boxoffice on Movies.Id=Boxoffice.Movie_id</span><br></pre></td></tr></table></figure><p>2.【计算】列出所有的电影ID,名字和市场指数(Rating的10倍为市场指数)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT Id,Title ,rating*10 as 市场指数 FROM movies </span><br><span class="line">inner join Boxoffice on Movies.Id=Boxoffice.Movie_id</span><br></pre></td></tr></table></figure><p>3.【计算】列出所有偶数年份的电影，需要电影ID,名字和年份</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT ID,Title,Year FROM movies WHERE Year%2==0</span><br></pre></td></tr></table></figure><p>4.【难题】John Lasseter导演的每部电影每分钟值多少钱,告诉我最高的3个电影名和价值就可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT Title,(Domestic_sales+International_sales)/Length_minutes AS 价值 FROM Movies </span><br><span class="line">inner join Boxoffice on Movies.Id=Boxoffice.Movie_id WHERE Director=&#x27;John Lasseter&#x27; </span><br><span class="line">ORDER BY 价值 DESC LIMIT 3</span><br></pre></td></tr></table></figure><ul><li><h4 id="SQL-Lesson-10-在查询中进行统计I-Pt-1"><a href="#SQL-Lesson-10-在查询中进行统计I-Pt-1" class="headerlink" title="SQL Lesson 10: 在查询中进行统计I (Pt. 1)"></a>SQL Lesson 10: 在查询中进行统计I (Pt. 1)</h4></li></ul><p>1.【统计】找出就职年份最高的雇员(列出雇员名字+年份）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT Name,max(Years_employed) FROM employees</span><br></pre></td></tr></table></figure><p>2.【分组】按角色(Role)统计一下每个角色的平均就职年份</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT role,avg(Years_employed) FROM employees group by role</span><br></pre></td></tr></table></figure><p>3.【分组】按办公室名字总计一下就职年份总和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT Building,sum(Years_employed) FROM employees group by Building</span><br></pre></td></tr></table></figure><p>4.【难题】每栋办公室按人数排名,不要统计无办公室的雇员</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT building,count(*) as count FROM employees </span><br><span class="line">where building is NOT null group by building</span><br></pre></td></tr></table></figure><ul><li><h4 id="SQL-Lesson-11-在查询中进行统计II-Pt-2"><a href="#SQL-Lesson-11-在查询中进行统计II-Pt-2" class="headerlink" title="SQL Lesson 11: 在查询中进行统计II (Pt. 2)"></a>SQL Lesson 11: 在查询中进行统计II (Pt. 2)</h4></li></ul><p>1.【统计】统计一下Artist角色的雇员数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT Count(*) AS 雇员数目 FROM employees WHERE Role=&#x27;Artist&#x27;</span><br></pre></td></tr></table></figure><p>2.【分组】按角色统计一下每个角色的雇员数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT role,count() FROM employees group by role</span><br></pre></td></tr></table></figure><p>3.【分组】算出Engineer角色的就职年份总计</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT sum(Years_employed) FROM employees where role=&#x27;Engineer&#x27;</span><br></pre></td></tr></table></figure><p>4.【难题】按角色分组算出每个角色按有办公室和没办公室的统计人数(列出角色，数量，有无办公室,注意一个角色如果部分有办公室，部分没有需分开统计）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) as count,Role,building is not null as 人数</span><br><span class="line">FROM employees group by Role,人数</span><br></pre></td></tr></table></figure><ul><li><h4 id="SQL-Lesson-12-查询执行顺序"><a href="#SQL-Lesson-12-查询执行顺序" class="headerlink" title="SQL Lesson 12: 查询执行顺序"></a>SQL Lesson 12: 查询执行顺序</h4></li></ul><p>1.【复习】统计出每一个导演的电影数量（列出导演名字和数量）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT DIRECTOR, count()AS 电影数量 FROM movies </span><br><span class="line">group by director</span><br></pre></td></tr></table></figure><p>2.【复习】统计一下每个导演的销售总额(列出导演名字和销售总额)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT DIRECTOR, sum(Domestic_sales+International_sales)AS 销售总额 FROM movies </span><br><span class="line">inner join Boxoffice </span><br><span class="line">on Movies.Id=Boxoffice.Movie_id </span><br><span class="line">group by director</span><br></pre></td></tr></table></figure><p>3.【难题】按导演分组计算销售总额,求出平均销售额冠军（统计结果过滤掉只有单部电影的导演，列出导演名，总销量，电影数量，平均销量)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT Director, SUM(Domestic_sales)+SUM(International_sales) AS TOTAL,</span><br><span class="line">       count() AS COUNTS,(SUM(Domestic_sales)+SUM(International_sales))/count(*) as avg FROM MOVIES</span><br><span class="line">left join Boxoffice </span><br><span class="line">on movies.Id=Boxoffice.movie_id </span><br><span class="line">group by director having countS &gt; 1 order by avg DESC LIMIT 1</span><br></pre></td></tr></table></figure><p>4.【变态难】找出每部电影和单部电影销售冠军之间的销售差，列出电影名，销售额差额</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT (SELECT (Domestic_sales+International_sales) as total_sale FROM movies </span><br><span class="line">left join boxoffice on movies.id = boxoffice.movie_id </span><br><span class="line">order by total_sale desc limit 1)  </span><br><span class="line">      (Domestic_sales+International_sales) as sale_diff,title FROM movies </span><br><span class="line">left join boxoffice </span><br><span class="line">on movies.id = boxoffice.movie_id </span><br><span class="line">order by sale_diff desc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/08/13/2022/hello-world/"/>
      <url>/08/13/2022/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more<br>info. If you get any problems when using Hexo, you can find the answer<br>in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me<br>on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
